extends layout

block content
    div
      //script(src="../javascripts/lib.js")
      script(src="../javascripts/parser.js")

    .content
      .container
        .page-header
          h3 Упражнения на выборку
        .row-fluid
          .span4.debug
            .ex-question.debug
                h4 упражнение #: #{excercise.id}
                p #{excercise.question}
            .ex-help.debug
                h4 для справки:
                ul
                    - for(var i=0;i<excercise.helps.length;++i) {
                        - var help=excercise.helps[i];
                        li
                            a(href='../help/#{excercise.helps[i]}') #{chapters[excercise.helps[i]].title}
                    - }
          .span8.debug
            .ex-query
                h5 query window
                .query-inner.debug
                    textarea#query-area #{config.defaultExcerciseTextAreaContent}
        .row-fluid.debug
          .span6.debug
            h4 Правильный ответ:
            //svg#correct_svg.debug
          .span6.user-test.debug
            .row.debug
              .span6.ddb
                h4 Результат запроса:
            .row
              //svg#result_svg.debug
              textarea#result_json.debug(autofocus)
    .modal.hide(id='result-modal', tabindex='-1', role='dialog')
                    .modal-header
                      h4 Id:
                    .modal-body
                      table
                        th
                          td Property
                          td Value
                        tbody

    script(type='text/javascript').
      var queryArea, resultSvg, resultDiv;
      //var graph = Morph.Graph.graph();
      var svg = document.getElementById('result_svg');
      var modal = $('#result-modal');
      var modalHeader = $('#result-modal>.modal-header>h4');
      var modalTable = $('#result-modal>.modal-body>table');
      var parser = new Parser();

      function fillNodeInfo(node){
              modalHeader.text('Id: '+node.id);

              modalTable.empty();
              var counter=0;
              var width = 100;
              for(var prop in node.data){
                ++counter;
                modalTable.append('<tr><td>'+prop+'</td><td>'+node.data[prop]+'</td></tr>');
                var temp=prop.length+node.data[prop].length;
                if(temp>width){
                width=temp*2;
                }
              }
                console.log(width);
                //modal.css('width',5*width+'px');
              if(counter==0){
                modalTable.append('<tr><td>selected node has no properties</td></tr>');
              }
      }
      /*var renderer = Morph.Graph.View.Renderer(graph, {
                  container: svg,
                  nodeSize: 30,
                  nodeColor: '#8abc4e',
                  linkColor: '#f00',
                  onNodeClick:function(node){
                  $('#result-modal').show({
                                         handle: ".modal-header"
                                     });
                    fillNodeInfo(node);
                  }
                });
        */

      function sendQuery(){
          console.log(queryArea.val());
          $.post( "../ex-check", { query: queryArea.val()})
            .done(function( data ) {
              console.log( "Data Loaded: ", data );
              parser.fromJson(data);
              //resultDiv.val(JSON.stringify(data,null,4));
              //graph.fromJSON(data.results);
              //renderer.run();
              queryArea.val("");
              //graph.log();
            });
      }

      $(document).ready(function () {
        queryArea=$('#query-area');
        resultSvg=$('#result_svg');
        resultDiv=$('#result_json');
        parser.init({container:resultDiv, ru:'ru'});


        $('#query-area').keydown(function (e) {

          if (e.ctrlKey && e.keyCode == 13) {
            // Ctrl-Enter pressed
            sendQuery();
          }
        });
        queryArea.focus();
      });

